{"version":3,"sources":["components/Form/Form.jsx","components/Suggestion/Suggestion.jsx","components/SuggestionList/SuggestionList.jsx","lib/data.js","components/Container/Container.jsx","lib/getResults.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","initialInputValue","showSuggestions","updateActiveQuery","updateSelectedSuggestion","inputRef","React","createRef","className","onSubmit","evt","console","log","current","value","preventDefault","type","ref","aria-label","onChange","onKeyDown","keyCode","role","aria-expanded","aria-controls","Suggestion","idx","selectedSuggestion","setSelectedSuggestion","text","isSelected","tabIndex","aria-selected","onFocus","SuggestionList","suggestions","id","hidden","map","suggestion","key","selected","Container","useState","setSuggestions","activeQuery","setActiveQuery","setShowSuggestions","useEffect","length","formInputValue","query","results","queryStr","regex","RegExp","data","filter","datum","match","getResults","direction","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kTAqDeA,G,YAlDF,SAACC,GAAW,IAErBC,EAIED,EAJFC,kBACAC,EAGEF,EAHFE,gBACAC,EAEEH,EAFFG,kBACAC,EACEJ,EADFI,yBAKIC,EAAWC,IAAMC,UAAU,MAmBjC,OACE,oCACE,0BAAMC,UAAU,kBAAkBC,SAfd,SAACC,GACvBC,QAAQC,IAAR,qBAA0BP,EAASQ,QAAQC,QAC3CJ,EAAIK,mBAcA,2BACEP,UAAU,mBACVQ,KAAK,OACLF,MAAOb,EACPgB,IAAKZ,EACLa,aAAW,YACXC,SA1BgB,WACtBhB,EAAkBE,EAASQ,QAAQC,QA0B7BM,UAlBc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACP,KAAZA,EACFjB,GAA0B,GACL,KAAZiB,GACTjB,EAAyB,IAerBkB,KAAK,WACLC,gBAAerB,EACfsB,gBAAc,oBAEhB,4BAAQhB,UAAU,qBAAlB,cCfOiB,G,YA7BI,SAACzB,GAAW,IAE3B0B,EAIE1B,EAJF0B,IACAC,EAGE3B,EAHF2B,mBACAC,EAEE5B,EAFF4B,sBACAC,EACE7B,EADF6B,KAOIC,EAAaJ,IAAQC,EAE3B,OACE,yBACEL,KAAK,SACLS,SAAS,KACTC,gBAAeF,EACfG,QAXkB,WACpBL,EAAsBF,IAWpBlB,UAAS,uCACPsB,EAAc,gCAAkC,KAEjDD,KCQQK,EA9BQ,SAAClC,GAAW,IAE/B2B,EAIE3B,EAJF2B,mBACAC,EAGE5B,EAHF4B,sBACA1B,EAEEF,EAFFE,gBACAiC,EACEnC,EADFmC,YAGF,OACE,yBACEC,GAAG,kBACH5B,UAAU,yBACVc,KAAK,UACLe,QAASnC,EACT6B,SAAS,MAERI,EAAYG,KAAI,SAACC,EAAYb,GAAb,OACf,kBAAC,EAAD,CACEc,IAAG,qBAAgBd,GACnBe,SAAUf,IAAQC,EAClBD,IAAKA,EACLG,KAAMU,EACNZ,mBAAoBA,EACpBC,sBAAuBA,SCvBlB,GACb,qBACA,SACA,gBACA,eACA,UACA,+BACA,SACA,qBACA,SACA,UACA,YACA,kBACA,gBACA,WACA,WACA,gBACA,eACA,WACA,QACA,cACA,UACA,WACA,UACA,eACA,cACA,WACA,YACA,kBACA,eACA,kBACA,cACA,cACA,UACA,sBACA,SACA,aACA,cACA,cACA,mBACA,aACA,YACA,kBACA,iBACA,YACA,YACA,sBACA,eACA,eACA,YACA,iBACA,cACA,eACA,yBACA,cACA,SACA,UACA,SACA,WACA,YACA,UACA,YACA,aACA,YACA,kBACA,iBACA,WACA,oBACA,gBACA,YACA,2BACA,gBACA,sBACA,eACA,UACA,eACA,WACA,YACA,cACA,YAAa,aACb,cACA,OACA,UACA,kBACA,SACA,eACA,MACA,cACA,WACA,OACA,cACA,YACA,cACA,aACA,mBACA,kBACA,gBACA,eACA,OACA,kBACA,eACA,YACA,cACA,cACA,sBACA,mBACA,2BACA,UACA,SACA,YACA,UACA,WACA,cACA,aACA,kBACA,eACA,aACA,eACA,kBACA,iBACA,8BACA,aACA,UACA,cACA,YACA,aACA,gBACA,gBACA,cACA,UACA,qBACA,SACA,eACA,kBACA,sBACA,4BACA,4BACA,cACA,YACA,eACA,YCvEac,EAnEG,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACfR,EADe,KACFS,EADE,OAE8BD,oBAAU,GAFxC,mBAEfhB,EAFe,KAEKC,EAFL,OAGgBe,mBAAS,IAHzB,mBAGfE,EAHe,KAGFC,EAHE,OAIwBH,oBAAS,GAJjC,mBAIfzC,EAJe,KAIE6C,EAJF,KAoCtBC,qBAAU,WACHb,GAAgBA,EAAYc,QAC/BrB,GAAuB,KAExB,CAACO,IAEJ,IAAIe,EAAiBL,EAMrB,OAJIV,EAAYc,QAAUtB,GAAsB,IAC9CuB,EAAiBf,EAAYR,IAI7B,oCACE,kBAAC,EAAD,CACE1B,kBAAmBiD,EACnBN,eAAgBA,EAChB1C,gBAAiBA,EACjBC,kBA9BoB,SAACgD,GACzBL,EAAeK,GAEf,IAAMC,EC/BK,SAACC,GACd,GAAiB,KAAbA,EAAiB,MAAO,GAC5B,IAAMC,EAAQ,IAAIC,OAAJ,WAAeF,GAAY,KACzC,OAAOG,EAAKC,QAAO,SAAAC,GAAK,OAA2B,OAAvBA,EAAMC,MAAML,MD4BtBM,CAAWT,GAC3BP,EAAeQ,GAEfL,EAAmBK,EAAQH,QAG3BrB,GAAuB,IAsBnBxB,yBAjD2B,SAACyD,IACb,IAAfA,EACElC,GAAsB,IACG,IAAvBA,GACFoB,GAAmB,GAErBnB,EAAsBD,EAAqB,IAEtB,IAAdkC,GACLlC,EAAqBQ,EAAYc,OAAS,KAChB,IAAxBtB,GACFoB,GAAmB,GAErBnB,EAAsBD,EAAqB,OAsC7C,kBAAC,EAAD,CACEA,mBAAoBA,EACpBC,sBAAuBA,EACvB1B,gBAAiBA,EACjBiC,YAAaA,M,MErDN2B,MATf,WACE,OACE,6BAAStD,UAAU,aACjB,uDACA,kBAAC,EAAD,QCGcuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASP,MACvB,2DCZNQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnE,QAAQmE,MAAMA,EAAMC,c","file":"static/js/main.70a695ff.chunk.js","sourcesContent":["import React from 'react';\nimport './Form.scss';\n\nconst Form = (props) => {\n  const {\n    initialInputValue,\n    showSuggestions,\n    updateActiveQuery,\n    updateSelectedSuggestion,\n  } = props;\n  // We make input uncontrolled here since we need to be able to\n  // update input value when user types query search and when\n  // user selects from suggestion\n  const inputRef = React.createRef(null);\n\n  const onChangeHandler = () => {\n    updateActiveQuery(inputRef.current.value);\n  };\n\n  const onSubmitHandler = (evt) => {\n    console.log(`submitting ${inputRef.current.value}`);\n    evt.preventDefault();\n  };\n\n  const handleKeyDown = ({ keyCode }) => {\n    if (keyCode === 38) {\n      updateSelectedSuggestion(-1);\n    } else if (keyCode === 40) {\n      updateSelectedSuggestion(1);\n    }\n  }\n\n  return (\n    <>\n      <form className=\"typeahead__form\" onSubmit={onSubmitHandler}>\n        <input\n          className=\"typeahead__input\"\n          type=\"text\"\n          value={initialInputValue}\n          ref={inputRef}\n          aria-label=\"Type text\"\n          onChange={onChangeHandler}\n          onKeyDown={handleKeyDown}\n          role=\"combobox\"\n          aria-expanded={showSuggestions}\n          aria-controls=\"suggestionsList\"\n        />\n        <button className=\"typeahead__submit\">Submit</button>\n      </form>\n    </>\n  )\n};\n\nexport default Form;\n","import React from 'react';\nimport './Suggestion.scss';\n\nconst Suggestion = (props) => {\n  const {\n    idx,\n    selectedSuggestion,\n    setSelectedSuggestion,\n    text,\n  } = props;\n\n  const handleOnFocus = () => {\n    setSelectedSuggestion(idx);\n  }\n\n  const isSelected = idx === selectedSuggestion;\n\n  return (\n    <div\n      role=\"option\"\n      tabIndex=\"-1\"\n      aria-selected={isSelected}\n      onFocus={handleOnFocus}\n      className={`typeahead__suggestion\n      ${isSelected ?  'typeahead__suggestion--active' : ''}`}\n    >\n      {text}\n    </div>\n  );\n\n};\n\nexport default Suggestion;","import React from 'react';\nimport './SuggestionList.scss';\nimport Suggestion from '../Suggestion/Suggestion';\n\nconst SuggestionList = (props) => {\n  const {\n    selectedSuggestion,\n    setSelectedSuggestion,\n    showSuggestions,\n    suggestions,\n  } = props;\n\n  return (\n    <div\n      id=\"suggestionsList\"\n      className=\"typeahead__suggestions\" \n      role=\"listbox\"\n      hidden={!showSuggestions}\n      tabIndex=\"-1\"\n    >\n      {suggestions.map((suggestion, idx) => (\n        <Suggestion\n          key={`suggestion-${idx}`}\n          selected={idx === selectedSuggestion}\n          idx={idx}\n          text={suggestion}\n          selectedSuggestion={selectedSuggestion}\n          setSelectedSuggestion={setSelectedSuggestion}\n        />\n      ))}\n    </div>\n  )\n};\n\nexport default SuggestionList;\n","/**\n * This data is borrowed somewhere from Web.\n * If you happens to be the owner, pls let me know so that I can acknowledge it here. Thanks!\n */\nexport default [\n  \"Aberfeldy Township\",\n  \"Altona\",\n  \"Arthurs Creek\",\n  \"Arthurs Seat\",\n  \"Ashwood\",\n  \"Bacchus Marsh Werribee River\",\n  \"Ballan\",\n  \"Beaconsfield Upper\",\n  \"Beenak\",\n  \"Berwick\",\n  \"Blackburn\",\n  \"Blackburn North\",\n  \"Blue Mountain\",\n  \"Box Hill\",\n  \"Braeside\",\n  \"Braeside Park\",\n  \"Broadmeadows\",\n  \"Brooklyn\",\n  \"Bulla\",\n  \"Bulla North\",\n  \"Bulleen\",\n  \"Bundoora\",\n  \"Burnley\",\n  \"Burwood East\",\n  \"Cambarville\",\n  \"Cardinia\",\n  \"Caulfield\",\n  \"Caulfield North\",\n  \"Cement Creek\",\n  \"Christmas Hills\",\n  \"Clarkefield\",\n  \"Clarkefield\",\n  \"Clayton\",\n  \"Clearwater Aqueduct\",\n  \"Coburg\",\n  \"Coldstream\",\n  \"Collingwood\",\n  \"Craigieburn\",\n  \"Craigieburn East\",\n  \"Cranbourne\",\n  \"Dandenong\",\n  \"Dandenong South\",\n  \"Dandenong West\",\n  \"Darraweit\",\n  \"Deer Park\",\n  \"Devilbend Reservoir\",\n  \"Diggers Rest\",\n  \"Dixons Creek\",\n  \"Doncaster\",\n  \"Doncaster East\",\n  \"Drouin West\",\n  \"Durdidwarrah\",\n  \"Eastern G.C. Doncaster\",\n  \"Elsternwick\",\n  \"Eltham\",\n  \"Emerald\",\n  \"Epping\",\n  \"Essendon\",\n  \"Fairfield\",\n  \"Fawkner\",\n  \"Fiskville\",\n  \"Flemington\",\n  \"Footscray\",\n  \"Frankston North\",\n  \"Frankston Pier\",\n  \"Gardiner\",\n  \"Glen Forbes South\",\n  \"Glen Waverley\",\n  \"Graceburn\",\n  \"Graceburn Creek Aqueduct\",\n  \"Greensborough\",\n  \"Greenvale Reservoir\",\n  \"Groom's Hill\",\n  \"Hampton\",\n  \"Hampton Park\",\n  \"Hawthorn\",\n  \"Headworks\",\n  \"Healesville\",\n  \"Heathmont\", \"Heidelberg\",\n  \"Hurstbridge\",\n  \"Iona\",\n  \"Ivanhoe\",\n  \"Kangaroo Ground\",\n  \"Keilor\",\n  \"Keilor North\",\n  \"Kew\",\n  \"Keysborough\",\n  \"Kinglake\",\n  \"Knox\",\n  \"Konagaderra\",\n  \"Kooweerup\",\n  \"Lake Borrie\",\n  \"Lancefield\",\n  \"Lancefield North\",\n  \"Launching Place\",\n  \"Lilydale Lake\",\n  \"Little River\",\n  \"Loch\",\n  \"Longwarry North\",\n  \"Lower Plenty\",\n  \"Lyndhurst\",\n  \"Lysterfield\",\n  \"Maribyrnong\",\n  \"Maroondah Reservoir\",\n  \"Melton Reservoir\",\n  \"Melton Sth Toolern Creek\",\n  \"Mentone\",\n  \"Mernda\",\n  \"Millgrove\",\n  \"Mitcham\",\n  \"Montrose\",\n  \"Mooroolbark\",\n  \"Mornington\",\n  \"Mount Dandenong\",\n  \"Mount Evelyn\",\n  \"Mount View\",\n  \"Mt Blackwood\",\n  \"Mt Bullengarook\",\n  \"Mt Donna Buang\",\n  \"Mt Evelyn Stringybark Creek\",\n  \"Mt Gregory\",\n  \"Mt Hope\",\n  \"Mt Horsfall\",\n  \"Mt Juliet\",\n  \"Mt Macedon\",\n  \"Mt St Gwinear\",\n  \"Mt St Leonard\",\n  \"Mt Waverley\",\n  \"Myrrhee\",\n  \"Narre Warren North\",\n  \"Nayook\",\n  \"Neerim South\",\n  \"Neerim-Elton Rd\",\n  \"Neerim-Neerim Creek\",\n  \"Neerim-Tarago East Branch\",\n  \"Neerim-Tarago West Branch\",\n  \"North Wharf\",\n  \"Northcote\",\n  \"Notting Hill\",\n  \"Nutfield\",\n];\n","import React, { useState, useEffect } from 'react';\nimport './Container.scss';\nimport Form from '../Form/Form';\nimport SuggestionList from '../SuggestionList/SuggestionList';\nimport getResults from '../../lib/getResults';\n\nconst Container = () => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedSuggestion, setSelectedSuggestion] = useState(-1);\n  const [activeQuery, setActiveQuery] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const updateSelectedSuggestion = (direction) => {\n    if (direction === -1) {\n      if (selectedSuggestion >= 0) {\n        if (selectedSuggestion === 0) {\n          setShowSuggestions(false);\n        }\n        setSelectedSuggestion(selectedSuggestion - 1);\n      }\n    } else if (direction === 1) {\n      if (selectedSuggestion < suggestions.length - 1) {\n        if (selectedSuggestion === -1) {\n          setShowSuggestions(true);\n        }\n        setSelectedSuggestion(selectedSuggestion + 1);\n      }\n    }\n  };\n\n  const updateActiveQuery = (query) => {\n    setActiveQuery(query);\n\n    const results = getResults(query);\n    setSuggestions(results);\n\n    setShowSuggestions(results.length);\n    // Every time we enter new query, reset the selected suggestion so that\n    // the query inside the input text will be updated properly\n    setSelectedSuggestion(-1);\n  }\n\n  useEffect(() => {\n    if (!suggestions || !suggestions.length) {\n      setSelectedSuggestion(-1);\n    }\n  }, [suggestions]);\n\n  let formInputValue = activeQuery;\n\n  if (suggestions.length && selectedSuggestion >= 0) {\n    formInputValue = suggestions[selectedSuggestion];\n  }\n\n  return (\n    <>\n      <Form\n        initialInputValue={formInputValue}\n        setSuggestions={setSuggestions}\n        showSuggestions={showSuggestions}\n        updateActiveQuery={updateActiveQuery}\n        updateSelectedSuggestion={updateSelectedSuggestion}\n      />\n      <SuggestionList\n        selectedSuggestion={selectedSuggestion}\n        setSelectedSuggestion={setSelectedSuggestion}\n        showSuggestions={showSuggestions}\n        suggestions={suggestions} \n      />\n    </>\n  )\n};\n\nexport default Container;","import data from './data';\n\nexport default (queryStr) => {\n  if (queryStr === '') return [];\n  const regex = new RegExp(`^${queryStr}`, 'i');\n  return data.filter(datum => datum.match(regex) !== null);\n}\n","import React from 'react';\nimport Container from './components/Container/Container';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <section className=\"typeahead\">\n      <h1>React Typeahead Example</h1>\n      <Container />\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}